using System;
using System.IO;
using System.Runtime.InteropServices.WindowsRuntime;
using System.Xml.Linq;
using System.Runtime.CompilerServices;
using System.Collections.Generic;
using System.Transactions;

namespace CapturaDatos
{
    class Program
    {
        static void Main(string[] args)
        {
            bool bo = false;
            do
            {
                bool bb = false;
                string a = "a";
                string path = @args[0];
                Console.WriteLine("Capturadora de datos V5.0.0");
                Console.WriteLine("Escoja la opción deseada");
                Console.WriteLine("1. Capturar");
                Console.WriteLine("2. Enlistar");
                Console.WriteLine("3. Buscar");
                Console.WriteLine("4. Editar");
                Console.WriteLine("5. Eliminar");
                Console.WriteLine("6. Salir");
                while (bb == false)
                {
                    a = Console.ReadLine().ToUpper();
                    if (a == "1" || a == "2" || a == "3" || a=="4" || a=="5" || a=="6")
                    {
                        bb = true;
                    }
                    else
                    {
                        Console.WriteLine("Introduzca un valor válido.");
                        Console.WriteLine();
                        bb = false;
                    }
                }
                switch(a)
                {
                    case "1":
                        bool y = false;
                        bool z = false;
                        bool v = false;
                        string nam, pass, ah;
                        int ID,ag;
                        ag = -1;
                        string x = "a";
                        bool w = false;
                        bool EC;
                        bool gen;
                        char EA;


                        do
                        {
                            Console.WriteLine("Introduzca los datos requeridos");
                            Console.Write("Cédula: ");
                            ID = ValidateInt();
                            Console.Write("Nombre: ");
                            nam = Console.ReadLine();
                            Console.WriteLine("Edad: ");
                            do
                            {
                                Console.WriteLine("*Introduzca un valor entre 0 y 127");
                                ag = ValidateInt();
                            }
                            while (!(ag>=0 && ag<=127));                          
                            Console.Write("Ahorros: ");
                            ah = ValidateDec();
                            Console.Write("Contraseña: ");
                            pass = ValidatePass();
                            Console.Write("Género (M/F): ");
                            gen = ValidateGen(Console.ReadKey().KeyChar);
                            Console.Write("Estado Civil (C/S): ");
                            EC = ValidateEC(Console.ReadKey().KeyChar);
                            Console.Write("Estado Académico (I/M/G/P): ");
                            EA = ValidateEA(Console.ReadKey().KeyChar);
                            ag = Codificar(ag, EC, EA, gen);
                            Console.WriteLine();
                            

                            do
                            {
                                while (z == false)
                                {
                                    Console.WriteLine("¿Está seguro que desea guardar estos datos?");
                                    Console.Write("Guardar(G), Descartar(D), Salir(S): ");
                                    x = Console.ReadLine().ToUpper();
                                    if (x == "G" || x == "D" || x == "S")
                                    {
                                        z = true;
                                    }
                                    else
                                    {
                                        Console.WriteLine("Introduzca un valor válido.");
                                        z = false;
                                    }
                                }
                                switch (x)
                                {
                                    case "G":
                                        if(Directory.Exists(path))
                                        {
                                            if (validar(Convert.ToString(ID), path) == false)
                                            {
                                                add(Convert.ToString(ID), nam, Convert.ToString(ag), ah, pass, path);
                                                Console.WriteLine("Guardado satisfactoriamente.");                                               
                                                y = true;
                                                z = false;
                                                x = "";
                                                do
                                                {
                                                    Console.WriteLine("¿Desea capturar otro dato? (S/N)");
                                                    x = Console.ReadLine().ToUpper();
                                                    if (x == "S" || x == "N")
                                                    {
                                                        v = true;
                                                    }
                                                    else
                                                    {
                                                        Console.WriteLine("Introduzca un valor válido.");
                                                    }
                                                }
                                                while (v==false);
                                                switch(x)
                                                {
                                                    case "S":
                                                        y = true;
                                                        z = false;
                                                        v = false;
                                                        Console.WriteLine();
                                                        break;

                                                    case "N":
                                                        w = true;
                                                        y = true;
                                                        z = true;
                                                        v = false;
                                                        break;
                                                }

                                            }
                                            else
                                            {
                                                Console.WriteLine("Cédula registrada");
                                                y = true;
                                                z = false;
                                                v = false;
                                                Console.WriteLine();
                                            }
                                        }
                                        else
                                        {
                                            add(Convert.ToString(ID), nam, Convert.ToString(ag), ah, pass, path);
                                            Console.WriteLine("Guardado satisfactoriamente.");
                                            y = true;
                                            z = false;
                                            v = false;
                                            x = "";
                                            do
                                            {
                                                Console.WriteLine("¿Desea capturar otro dato? (S/N)");
                                                x = Console.ReadLine().ToUpper();
                                                if (x == "S" || x == "N")
                                                {
                                                    v = true;
                                                }
                                                else
                                                {
                                                    Console.WriteLine("Introduzca un valor válido.");
                                                }
                                            }
                                            while (v == false);
                                            switch (x)
                                            {
                                                case "S":
                                                    y = true;
                                                    z = false;
                                                    v = false;
                                                    Console.WriteLine();
                                                    break;

                                                case "N":
                                                    w = true;
                                                    y = true;
                                                    z = true;
                                                    v = false;
                                                    break;
                                            }
                                        }
                                        
                                        break;
                                    case "D":
                                        y = true;
                                        z = false;
                                        v = false;
                                        Console.WriteLine();
                                        break;
                                    case "S":
                                        w = true;
                                        y = true;
                                        z = true;
                                        v = false;
                                        break;
                                }

                            }
                            while (y == false);
                        }
                        while (w==false);
                        Console.WriteLine();
                        break;


                    case "2":
                        if (!Directory.Exists(path))
                        {
                            string[] data = load(path);
                            Console.WriteLine("Formato: Cédula, Nombre, Edad, Ahorros, Contraseña, Género, E. Civil, E. Académico ");
                            foreach (string line in data)
                            {
                                string[] term = line.Split(',');              
                                int iAg=Convert.ToInt32(term[2]);
                                Console.Write(term[0]+", "+term[1] + ", " + Convert.ToString(DeAg(iAg)) + ", " + term[3] + ", ");
                                WritePass(Convert.ToString(term[4]));
                                Console.Write(", ");
                                Console.Write(DeGen(iAg) + ", " +DeEC(iAg) + ", " +DeEA(iAg));
                                Console.WriteLine();


                            }
                        }
                        else
                        {
                            Console.Error.WriteLine("Archivo no existe");
                        }
                        Console.WriteLine();
                        break;


                    case "3":
                        Console.WriteLine("Introduzca la cédula");
                        string param = Console.ReadLine();
                        string checker = "";
                        if (!Directory.Exists(path))
                        {
                            string[] data = load(path);
                            
                            foreach (string line in data)
                            {
                                string[] term=line.Split(',');
                                if(term[0]==param)
                                {
                                    checker = term[0];
                                    int iAg = Convert.ToInt32(term[2]);
                                    Console.WriteLine("Formato: Cédula, Nombre, Edad, Ahorros, Contraseña, Género, E. Civil, E. Académico ");
                                    Console.Write(term[0] + ", " + term[1] + ", " + Convert.ToString(DeAg(iAg)) + ", " + term[3] + ", ");
                                    WritePass(Convert.ToString(term[4]));
                                    Console.Write(", ");
                                    Console.Write(DeGen(iAg) + ", " + DeEC(iAg) + ", " + DeEA(iAg));
                                    Console.WriteLine();
                                }
                            }
                            if(checker!=param)
                            {
                                Console.WriteLine("Cédula no existente");
                            }
                        }
                        else
                        {
                            Console.Error.WriteLine("Archivo no existe");
                        }
                        Console.WriteLine();
                        break;


                    case "4":
                        Console.WriteLine("Introduzca la cédula");
                        bool t = false;
                        z = false;
                        x = "a";
                        string temp = "temp.txt";
                        param = Console.ReadLine();
                        if (!Directory.Exists(path))
                        {
                            if (validar(param, path) == true)
                            {
                                string[] data = load(path);
                                foreach (string line in data)
                                {
                                    string[] term = line.Split(',');
                                    if (!(term[0] == param))
                                    {
                                        
                                        add(term[0], term[1], term[2], term[3], term[4], @temp);
                                    }
                                    else
                                    {
                                        do
                                        {
                                            Console.WriteLine("Cédula actual: " + term[0]);
                                            Console.Write("Nueva cédula: ");
                                            int vID = ValidateInt();
                                            Console.WriteLine("Nombre actual: " + term[1]);
                                            Console.Write("Nuevo nombre: ");
                                            string vNam = Console.ReadLine();
                                            Console.WriteLine("Edad actual: " + DeAg(Convert.ToInt32(term[2])));
                                            Console.Write("Nueva edad: ");
                                            int vAge = ValidateInt();
                                            Console.WriteLine("Ahorros actuales: " + term[3]);
                                            Console.Write("Nuevo ahorro: ");
                                            string vAh = ValidateDec();
                                            Console.Write("Contraseña actual: ");
                                            WritePass(Convert.ToString(term[4]));
                                            Console.WriteLine();
                                            string vPass = ValidatePass();
                                            Console.WriteLine("Género actual (M/F): " + DeGen(Convert.ToInt32(term[2])));
                                            Console.Write("Nuevo género: ");
                                            gen = ValidateGen(Console.ReadKey().KeyChar);
                                            Console.WriteLine("Estado Civil actual (C/S): "+DeEC(Convert.ToInt32(term[2])));
                                            Console.Write("Nuevo Estado Civil (C/S): ");
                                            EC = ValidateEC(Console.ReadKey().KeyChar);
                                            Console.WriteLine("Estado Académico actual (I/M/G/P): "+DeEA(Convert.ToInt32(term[2])));
                                            Console.Write("Nuevo Estado Académico (I/M/G/P): ");
                                            EA = ValidateEA(Console.ReadKey().KeyChar);
                                            vAge = Codificar(vAge, EC, EA, gen);
                                            Console.WriteLine();

                                            while (z == false)
                                            {
                                                Console.WriteLine("¿Está seguro que desea guardar estos datos?");
                                                Console.Write("Guardar(G), Descartar(D), Salir(S): ");
                                                x = Console.ReadLine().ToUpper();
                                                if (x == "G" || x == "D" || x == "S")
                                                {
                                                    z = true;
                                                }
                                                else
                                                {
                                                    Console.WriteLine("Introduzca un valor válido.");
                                                    z = false;
                                                }
                                            }
                                            switch (x)
                                            {
                                                case "G":
                                                    add(Convert.ToString(vID), vNam, Convert.ToString(vAge), vAh, vPass, @temp);
                                                    Console.WriteLine();
                                                    t = true;
                                                    z = false;
                                                    break;
                                                    
     
                                                case "D":

                                                    z = false;
                                                    Console.WriteLine();
                                                    break;
                                                case "S":
                                                    t = true;
                                                    z = true;
                                                    break;
                                            }
                                        }
                                        while (t == false); 
                                       
                                    }
                                }
                                File.Delete(@path);
                                System.IO.File.Move(temp, path);
                                Console.WriteLine("Guardado satisfactoriamente");
                            }
                            else
                            {
                                Console.WriteLine("Cédula no existente");
                            }
                        }
                        else
                        {
                            Console.Error.WriteLine("Archivo no existe");
                        }
                        Console.WriteLine();
                        break;


                    case "5":
                        Console.WriteLine("Introduzca la cédula");
                        bool eliminar = false;
                        v = false;
                        temp = "temp.txt";
                        param = Console.ReadLine();
                        do
                        {
                            Console.WriteLine("¿Desea eliminar el registro? (S/N)");
                            x = Console.ReadLine().ToUpper();
                            if (x == "S" || x == "N")
                            {
                                v = true;
                            }
                            else
                            {
                                Console.WriteLine("Introduzca un valor válido.");
                            }
                        }
                        while (v == false);
                        switch (x)
                        {
                            case "S":
                                eliminar = true;
                                break;

                            case "N":
                                eliminar = false;
                                break;
                        }
                        if (eliminar==true)
                        {
                            if (!Directory.Exists(path))
                            {
                                if (validar(param, path) == true)
                                {
                                    string[] data = load(path);
                                    foreach (string line in data)
                                    {
                                        string[] term = line.Split(',');
                                        if (!(term[0] == param))
                                        {
                                            add(term[0], term[1], term[2], term[3], term[4], @temp);
                                        }


                                    }
                                    File.Delete(@path);
                                    System.IO.File.Move(temp, path);
                                    Console.WriteLine("Eliminado satisfactoriamente");
                                    Console.WriteLine();
                                }
                                else
                                {
                                    Console.WriteLine("Cédula no existente");
                                }

                            }
                            else
                            {
                                Console.Error.WriteLine("Archivo no existe");
                            }
                        }

                        break;
                    case "6":
                        Environment.Exit(0);
                        break;
                }

            }
            while (bo==false);

        }

        public static void add(string vID, string vNam, string vAg, string vAh, string vpass,string filepath)
        {
            try
            {
                if (!Directory.Exists(@filepath))
                {
                    using (StreamWriter writer = new StreamWriter(new FileStream(@filepath, FileMode.Append, FileAccess.Write)))
                    {
                        writer.WriteLine(vID + ',' + vNam + ',' + vAg + ',' +vAh + ',' +vpass);


                    }
                }
                else
                {
                    using (StreamWriter writer = new StreamWriter(new FileStream(@filepath, FileMode.Create, FileAccess.Write)))
                    {
                        writer.WriteLine(vID + ',' + vNam + ',' + vAg + ',' + vAh + ',' + vpass);
                    }
                }

            }
            catch (Exception e)
            {
                Console.Error.WriteLine("Error: " + e);
                Environment.Exit(0);
            }
        }
        public static string[] load(string filepath)
        {
            string[] lines=System.IO.File.ReadAllLines(@filepath);
            return lines;
        }
        public static bool validar(string para, string filepath)
        {
            string[] data = System.IO.File.ReadAllLines(@filepath);
            foreach(string line in data)
            {
                string[] term = line.Split(',');
                if(term[0]==para)
                {
                    return true;
                }
            }
            return false;


        }
        public static int ValidateInt()
        {
            bool r= true;
            string k = "";
            do
            {
                ConsoleKeyInfo key;
                
                int i;
                do
                {
                    key = Console.ReadKey(true);
                    if (key.Key != ConsoleKey.Backspace)
                    {
                        bool x = int.TryParse(key.KeyChar.ToString(), out i);
                        if (x)
                        {

                            k += key.KeyChar;
                            Console.Write(key.KeyChar);
                        }
                    }
                    else
                    {
                        if (key.Key == ConsoleKey.Backspace && k.Length > 0)
                        {
                            k = k.Substring(0, (k.Length - 1));
                            Console.Write("\b \b");
                        }
                    }
                }
                while (key.Key != ConsoleKey.Enter);
                if(k=="")
                {
                    Console.WriteLine("Ingrese un valor valido");
                }
                else
                {
                    r = false;
                }
             }
             while (r == true);
            Console.WriteLine();
            return Convert.ToInt32(k);
           

            
        }
        public static string ValidateDec()
        {
            ConsoleKeyInfo key;
            string k = "";
            decimal i;
            bool r = true;
            do
            {
                do
                {
                    key = Console.ReadKey(true);
                    if (key.Key != ConsoleKey.Backspace)
                    {
                        bool x = decimal.TryParse(key.KeyChar.ToString(), out i);
                        if (x)
                        {
                            k += key.KeyChar;
                            Console.Write(key.KeyChar);
                        }
                    }
                    else
                    {
                        if (key.Key == ConsoleKey.Backspace && k.Length > 0)
                        {
                            k = k.Substring(0, (k.Length - 1));
                            Console.Write("\b \b");
                        }
                    }
                }
                while (key.Key != ConsoleKey.Enter);
                if (k == "")
                {
                    Console.WriteLine("Ingrese un valor valido");
                }
                else
                {
                    r = false;
                }
            }
            while (r == true);
            Console.WriteLine();
            return k;


        }

        public static string ValidatePass()
        {
            bool x = true;
            bool y = true;
            string pass;
            string cpass;
            do
            {
                ConsoleKeyInfo key;
                do
                {
                    y = true;
                    pass = "";
                    cpass = "";

                    do
                    {
                        key = Console.ReadKey(true);
                        if (key.Key != ConsoleKey.Backspace && key.Key != ConsoleKey.Enter)
                        {
                            pass += key.KeyChar;
                            Console.Write("*");
                        }
                        else
                        {
                            if (key.Key == ConsoleKey.Backspace && pass.Length > 0)
                            {
                                pass = pass.Substring(0, (pass.Length - 1));
                                Console.Write("\b \b");
                            }
                        }
                    }
                    while (key.Key != ConsoleKey.Enter);
                    Console.WriteLine();
                    Console.WriteLine("Confirme su contraseña");
                    do
                    {
                        key = Console.ReadKey(true);
                        if (key.Key != ConsoleKey.Backspace && key.Key!=ConsoleKey.Enter)
                        {
                            cpass += key.KeyChar;
                            Console.Write("*");
                        }
                        else
                        {
                            if (key.Key == ConsoleKey.Backspace && cpass.Length > 0)
                            {
                                cpass = cpass.Substring(0, (cpass.Length - 1));
                                Console.Write("\b \b");
                            }
                        }
                    }
                    while (key.Key != ConsoleKey.Enter);
                    if (pass == cpass)
                    {
                        x = false;
                        y = false;
                    }
                    else
                    {
                        Console.WriteLine();
                        Console.WriteLine("Asegure que sus contraseñas sean iguales");
                        x = true;
                        y = false;
                    }
                } 
                while (y == true);
            }
            while (x == true);
            Console.WriteLine();
            return pass;
        }
        public static void WritePass(string i)
        {
            foreach(char x in i)
            {
                Console.Write("*");
            }
        }

        public static bool ValidateGen(char G)
        {
            if(!(G=='M' || G=='F'))
            {
                do
                {
                    Console.WriteLine();
                    Console.WriteLine("Introduzca un valor válido (Sensible a mayúsculas)");
                    G = Console.ReadKey().KeyChar;
                }
                while (!(G == 'M' || G == 'F'));
                
            }
            if (G == 'M')
            {
                Console.WriteLine();
                return true;
            }
            else
            {
                Console.WriteLine();
                return false;
            }
            
        }
        public static bool ValidateEC(char G)
        {
            if (!(G == 'C' || G == 'S'))
            {
                do
                {
                    Console.WriteLine();
                    Console.WriteLine("Introduzca un valor válido (Sensible a mayúsculas)");
                    G = Console.ReadKey().KeyChar;
                }
                while (!(G == 'C' || G == 'S'));

            }
            if (G == 'C')
            {
                Console.WriteLine();
                return true;
            }
            else
            {
                Console.WriteLine();
                return false;
            }

        }
        public static char ValidateEA(char G)
        {
            if (!(G == 'I' || G == 'M'  || G=='G' || G=='P'))
            {
                do                
                {
                    Console.WriteLine();
                    Console.WriteLine("Introduzca un valor válido (Sensible a mayúsculas)");
                    G = Console.ReadKey().KeyChar;
                }
                while (!(G == 'I' || G == 'M' || G == 'G' || G == 'P'));

            }
            return G;
                
        }

        public static int Codificar(int I, bool EC, char EA, bool gen)
        {
            if(gen==true)
            {
                I = I | 1024;
            }
            if(EC==true)
            {
                I = I | 512;
            }
            switch(EA)
            {
                case 'P': //11
                    I = I | 384;
                    break;
                case 'G': //10
                    I = I | 256;
                    break;
                case 'M': //01
                    I = I | 128;
                    break;
                default: //00
                    break;
            }
            return I;
        }

        public static char DeGen(int ag)
        {
            if ((ag & 0b_010000000000) == 0b_010000000000)
            {
                return 'M';
            }
            else
            {
                return 'F';
            }
        }
        public static char DeEC(int ag)
        {
            if ((ag & 0b_001000000000) == 0b_001000000000)
            {
                return 'C';
            }
            else
            {
                return 'S';
            }
        }
        public static char DeEA(int ag)
        {

            if ((ag & 0b_000110000000) == 0b_000110000000)
            {
                return 'P';
            }
            else if ((ag & 0b_000100000000) == 0b_000100000000)
            {
                return 'G';
            }
            else if ((ag & 0b_000010000000) == 0b_000010000000)
            {
                return 'M';
            }
            else
            {
                return 'I';
            }

        }
        public static int DeAg(int ag)
        {
            return ag & 0b_1111111;
        }


    }
    }

